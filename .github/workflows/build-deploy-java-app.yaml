name: Build and Deploy Java app

on:
  pull_request:
    branches:
      - workflow-update
  push:
    branches:
      - workflow-update

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      IMAGE_NAME: hello-world
      REPO_NAME: hello-world

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker Image
        id: docker_build
        run: |
          docker build ./myapp -t ${{ env.IMAGE_NAME }}

      - name: Backup current pom.xml and create container for extracting new version of pom.xml 
        id: backup_pom
        run: |
          cp ./myapp/pom.xml ./myapp/backup_pom.xml
          docker create --name temp ${{ env.IMAGE_NAME }}
          docker cp temp:/app/pom.xml ./myapp/pom.xml
          docker rm temp

      - name: Get jar version from the extracted pom file
        id: get_version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -f myapp/pom.xml)
          echo "Detected JAR version: $version"
          echo "JAR_VERSION=$version" >> $GITHUB_ENV

      - name: Tag docker image 
        id: tag_image
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:$JAR_VERSION
          docker tag ${{ env.IMAGE_NAME }} ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:latest

      - name: Login to Docker Hub
        id: docker_login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Commit new jar version
        id: commit_pom
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add myapp/pom.xml
          git commit -m "new jar version"
          git push origin workflow-update
          echo "Replaced pom.xml with extracted version from Docker image"

      - name: Push Docker image to Docker Hub
        id: push_img
        run: |
          docker push ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:$JAR_VERSION

      - name: Pull Docker image from Docker Hub
        id: pull_img
        run: |
          docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:$JAR_VERSION
          exit 1
      - name: Run Docker Image
        id: check_img
        run: |
          docker run --rm ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:$JAR_VERSION

      - name: Push image as latest
        id: push_latest
        run: |
          docker push ${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:latest
         
      - name: If previous step failed revert POM.xml and remove pushed images from docker hub
        if: failure() && (steps.push_img.outcome == 'failure' || steps.pull_img.outcome == 'failure' || steps.check_img.outcome == 'failure' || steps.push_latest.outcome == 'failure')
        continue-on-error: true
        run: |
          echo "Reverting to a previous state due to failure"
          cp ./myapp/backup_pom.xml ./myapp/pom.xml
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add myapp/pom.xml
          git commit -m "revert to previous jar version because of failure"
          git push origin workflow-update
          echo "Pom.xml restored successfully"
            
          if [[ "${{ steps.push_img.outcome }}" == "success" && ("${{ steps.pull_img.outcome }}" == "failure" || "${{ steps.check_img.outcome }}" == "failure") || "${{ steps.push_latest.outcome }}" == "failure" ]]; then
            docker run --rm curlimages/curl:7.86.0 curl -X DELETE \
              -H "Authorization: Bearer ${{ env.DOCKER_HUB_ACCESS_TOKEN }}" \
              "https://hub.docker.com/v2/repositories/${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}/tags/$JAR_VERSION/"
            echo "Successfully deleted failed image tag from Docker Hub"
          fi
        


